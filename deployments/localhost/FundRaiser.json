{
  "address": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
  "abi": [
    {
      "inputs": [],
      "name": "addressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "charityNameToLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "charityFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fundsSentToCharity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "newCharityAllowed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "addToCharityFund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_charityName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "allowNewCharity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedCharities",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "charityBalance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "charityName",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "checkAllowedCharityFunding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkCharityFundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "checkCharityName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_charityFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sendToCharity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x627a9454e6e57b738fe39a495e2699b8ef84f13aa6e715df788f87d801c343e7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
    "transactionIndex": 0,
    "gasUsed": "508207",
    "logsBloom": "0x
    "blockHash": "0x075a84f983cef38b22ac60eb77dc4f03416b74e6ce28809c7783f9f0a429bb06",
    "transactionHash": "0x627a9454e6e57b738fe39a495e2699b8ef84f13aa6e715df788f87d801c343e7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18021577,
        "transactionHash": "0x627a9454e6e57b738fe39a495e2699b8ef84f13aa6e715df788f87d801c343e7",
        "address": "0x64f5219563e28EeBAAd91Ca8D31fa3b36621FD4f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x075a84f983cef38b22ac60eb77dc4f03416b74e6ce28809c7783f9f0a429bb06"
      }
    ],
    "blockNumber": 18021577,
    "cumulativeGasUsed": "508207",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a651e7a692811e23928099cda18dac36",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"charityNameToLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"charityFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundsSentToCharity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"newCharityAllowed\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"addToCharityFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_charityName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"allowNewCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedCharities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"charityBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"charityName\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkAllowedCharityFunding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkCharityFundValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"checkCharityName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_charityFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToCharity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRaiser.sol\":\"FundRaiser\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FundRaiser.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FundRaiser is Ownable {\\n    error charityNameToLong();\\n    error addressNotAllowed();\\n\\n    uint256 public s_charityFund; //uint256 because the charity fund can become very big\\n\\n    event fundsSentToCharity(address indexed _address, uint256 _amount);\\n    event charityFunded(address indexed _address, uint256 _amount);\\n    event newCharityAllowed(address indexed _address, bytes32 _name);\\n\\n    struct allowedCharity {\\n        uint256 charityBalance;\\n        bytes32 charityName;\\n        bool exists;\\n    }\\n\\n    mapping(address => allowedCharity) public allowedCharities;\\n\\n    //FUNCTION TO SEND MONEY TO A CHARITY, OWNABLE BY DAO\\n    function sendToCharity(address _address, uint256 _amount) public onlyOwner {\\n        if (!allowedCharities[_address].exists) {\\n            revert addressNotAllowed();\\n        }\\n        s_charityFund -= _amount;\\n        allowedCharities[_address].charityBalance += _amount;\\n        emit fundsSentToCharity(_address, _amount);\\n    }\\n\\n    //FUNCTION TO ALLOW NE CHARITY, OWNABLE BY DAO\\n    function allowNewCharity(string memory _charityName, address _address) public onlyOwner {\\n        if (bytes(_charityName).length > 24) {\\n            revert charityNameToLong();\\n        }\\n        allowedCharities[_address].exists = true;\\n        allowedCharities[_address].charityName = bytes32(bytes(_charityName));\\n        emit newCharityAllowed(_address, bytes32(bytes(_charityName)));\\n    }\\n\\n    //ADD TO A CHARITY FUND, DONT GET THE GOVERNANCE TOKENS IF NOT CALLED FROM A FUNDTOKEN\\n    function addToCharityFund() public payable {\\n        s_charityFund += msg.value;\\n        emit charityFunded(msg.sender, msg.value);\\n    }\\n\\n    //SEE THE CHARITY FUND\\n    function checkCharityFundValue() public view returns (uint256) {\\n        return s_charityFund;\\n    }\\n\\n    //SEE THE CHARITY NAME\\n    function checkCharityName(address _address) public view returns (bytes32) {\\n        if (!allowedCharities[_address].exists) {\\n            revert addressNotAllowed();\\n        }\\n        return allowedCharities[_address].charityName;\\n    }\\n\\n    //CHECK ALLOWED CHARITY FUNDING TILL NOW\\n    function checkAllowedCharityFunding(address _address) public view returns (uint256) {\\n        if (!allowedCharities[_address].exists) {\\n            revert addressNotAllowed();\\n        }\\n        return allowedCharities[_address].charityBalance;\\n    }\\n\\n    //FALLBACK FUNCTION(called if the function called doesn't exist, contains msg.data)\\n    fallback() external payable {\\n        addToCharityFund();\\n    }\\n\\n    //RECEIVE FUNTCION(called if the function called doesn't exits, doesnt contain msg.data)\\n    receive() external payable {\\n        addToCharityFund();\\n    }\\n}\\n\",\"keccak256\":\"0x35243907e50248e664c979ffe57f0cb89482b901680215c0484ff9914053b1d4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107c68061007e6000396000f3fe6080604052600436106100a05760003560e01c80637cd4bcdc116100645780637cd4bcdc1461018b5780638da5cb5b146101ab578063a0b34191146101d3578063b2adeb2a146101f3578063e3b3e91d146100af578063f2fde38b14610209576100af565b806326c35669146100b75780632713201a146100db57806343efdb3b146100fb578063471eac0314610156578063715018a614610176576100af565b366100af576100ad610229565b005b6100ad610229565b3480156100c357600080fd5b506001545b6040519081526020015b60405180910390f35b3480156100e757600080fd5b506100ad6100f6366004610616565b610277565b34801561010757600080fd5b506101396101163660046106d8565b600260208190526000918252604090912080546001820154919092015460ff1683565b6040805193845260208401929092521515908201526060016100d2565b34801561016257600080fd5b506100c86101713660046106d8565b610331565b34801561018257600080fd5b506100ad610389565b34801561019757600080fd5b506100ad6101a63660046106fa565b61039d565b3480156101b757600080fd5b506000546040516001600160a01b0390911681526020016100d2565b3480156101df57600080fd5b506100c86101ee3660046106d8565b610461565b3480156101ff57600080fd5b506100c860015481565b34801561021557600080fd5b506100ad6102243660046106d8565b6104bc565b346001600082825461023b919061073a565b909155505060405134815233907fad205a8b04dcbc91201ec4677fd2ef4e2b5c3e3367b8aa8463daee8256393e279060200160405180910390a2565b61027f61053a565b6018825111156102a257604051635047bf8d60e01b815260040160405180910390fd5b6001600160a01b038116600090815260026020819052604090912001805460ff191660011790556102d282610752565b6001600160a01b0382166000818152600260205260409020600101919091557ffc74cfd8233f45e9700587bb8f37c28d77932dfd1cb119acd6795905c3feb1a261031b84610752565b6040519081526020015b60405180910390a25050565b6001600160a01b03811660009081526002602081905260408220015460ff1661036d57604051630cae904d60e11b815260040160405180910390fd5b506001600160a01b031660009081526002602052604090205490565b61039161053a565b61039b6000610594565b565b6103a561053a565b6001600160a01b0382166000908152600260208190526040909120015460ff166103e257604051630cae904d60e11b815260040160405180910390fd5b80600160008282546103f49190610779565b90915550506001600160a01b0382166000908152600260205260408120805483929061042190849061073a565b90915550506040518181526001600160a01b038316907fbbb4d2b9d13b6730af1be39100fe46710d19d1b45bde9dedf1bc9ff4ed7287ae90602001610325565b6001600160a01b03811660009081526002602081905260408220015460ff1661049d57604051630cae904d60e11b815260040160405180910390fd5b506001600160a01b031660009081526002602052604090206001015490565b6104c461053a565b6001600160a01b03811661052e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61053781610594565b50565b6000546001600160a01b0316331461039b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610525565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461061157600080fd5b919050565b6000806040838503121561062957600080fd5b823567ffffffffffffffff8082111561064157600080fd5b818501915085601f83011261065557600080fd5b813581811115610667576106676105e4565b604051601f8201601f19908116603f0116810190838211818310171561068f5761068f6105e4565b816040528281528860208487010111156106a857600080fd5b8260208601602083013760006020848301015280965050505050506106cf602084016105fa565b90509250929050565b6000602082840312156106ea57600080fd5b6106f3826105fa565b9392505050565b6000806040838503121561070d57600080fd5b610716836105fa565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561074d5761074d610724565b500190565b80516020808301519190811015610773576000198160200360031b1b821691505b50919050565b60008282101561078b5761078b610724565b50039056fea2646970667358221220e7e90dc3d2992a9287f47da1902246323207bc3f4ef2d785e279b4216949edc564736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c80637cd4bcdc116100645780637cd4bcdc1461018b5780638da5cb5b146101ab578063a0b34191146101d3578063b2adeb2a146101f3578063e3b3e91d146100af578063f2fde38b14610209576100af565b806326c35669146100b75780632713201a146100db57806343efdb3b146100fb578063471eac0314610156578063715018a614610176576100af565b366100af576100ad610229565b005b6100ad610229565b3480156100c357600080fd5b506001545b6040519081526020015b60405180910390f35b3480156100e757600080fd5b506100ad6100f6366004610616565b610277565b34801561010757600080fd5b506101396101163660046106d8565b600260208190526000918252604090912080546001820154919092015460ff1683565b6040805193845260208401929092521515908201526060016100d2565b34801561016257600080fd5b506100c86101713660046106d8565b610331565b34801561018257600080fd5b506100ad610389565b34801561019757600080fd5b506100ad6101a63660046106fa565b61039d565b3480156101b757600080fd5b506000546040516001600160a01b0390911681526020016100d2565b3480156101df57600080fd5b506100c86101ee3660046106d8565b610461565b3480156101ff57600080fd5b506100c860015481565b34801561021557600080fd5b506100ad6102243660046106d8565b6104bc565b346001600082825461023b919061073a565b909155505060405134815233907fad205a8b04dcbc91201ec4677fd2ef4e2b5c3e3367b8aa8463daee8256393e279060200160405180910390a2565b61027f61053a565b6018825111156102a257604051635047bf8d60e01b815260040160405180910390fd5b6001600160a01b038116600090815260026020819052604090912001805460ff191660011790556102d282610752565b6001600160a01b0382166000818152600260205260409020600101919091557ffc74cfd8233f45e9700587bb8f37c28d77932dfd1cb119acd6795905c3feb1a261031b84610752565b6040519081526020015b60405180910390a25050565b6001600160a01b03811660009081526002602081905260408220015460ff1661036d57604051630cae904d60e11b815260040160405180910390fd5b506001600160a01b031660009081526002602052604090205490565b61039161053a565b61039b6000610594565b565b6103a561053a565b6001600160a01b0382166000908152600260208190526040909120015460ff166103e257604051630cae904d60e11b815260040160405180910390fd5b80600160008282546103f49190610779565b90915550506001600160a01b0382166000908152600260205260408120805483929061042190849061073a565b90915550506040518181526001600160a01b038316907fbbb4d2b9d13b6730af1be39100fe46710d19d1b45bde9dedf1bc9ff4ed7287ae90602001610325565b6001600160a01b03811660009081526002602081905260408220015460ff1661049d57604051630cae904d60e11b815260040160405180910390fd5b506001600160a01b031660009081526002602052604090206001015490565b6104c461053a565b6001600160a01b03811661052e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61053781610594565b50565b6000546001600160a01b0316331461039b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610525565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461061157600080fd5b919050565b6000806040838503121561062957600080fd5b823567ffffffffffffffff8082111561064157600080fd5b818501915085601f83011261065557600080fd5b813581811115610667576106676105e4565b604051601f8201601f19908116603f0116810190838211818310171561068f5761068f6105e4565b816040528281528860208487010111156106a857600080fd5b8260208601602083013760006020848301015280965050505050506106cf602084016105fa565b90509250929050565b6000602082840312156106ea57600080fd5b6106f3826105fa565b9392505050565b6000806040838503121561070d57600080fd5b610716836105fa565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561074d5761074d610724565b500190565b80516020808301519190811015610773576000198160200360031b1b821691505b50919050565b60008282101561078b5761078b610724565b50039056fea2646970667358221220e7e90dc3d2992a9287f47da1902246323207bc3f4ef2d785e279b4216949edc564736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/FundRaiser.sol:FundRaiser",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5615,
        "contract": "contracts/FundRaiser.sol:FundRaiser",
        "label": "s_charityFund",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 5645,
        "contract": "contracts/FundRaiser.sol:FundRaiser",
        "label": "allowedCharities",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(allowedCharity)5640_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(allowedCharity)5640_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FundRaiser.allowedCharity)",
        "numberOfBytes": "32",
        "value": "t_struct(allowedCharity)5640_storage"
      },
      "t_struct(allowedCharity)5640_storage": {
        "encoding": "inplace",
        "label": "struct FundRaiser.allowedCharity",
        "members": [
          {
            "astId": 5635,
            "contract": "contracts/FundRaiser.sol:FundRaiser",
            "label": "charityBalance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5637,
            "contract": "contracts/FundRaiser.sol:FundRaiser",
            "label": "charityName",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 5639,
            "contract": "contracts/FundRaiser.sol:FundRaiser",
            "label": "exists",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}